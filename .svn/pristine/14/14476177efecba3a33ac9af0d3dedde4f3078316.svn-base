package com.techfly.demo.activity.base;


import android.content.Context;
import android.os.Build;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.techfly.demo.R;
import com.techfly.demo.bean.ErrorBean;
import com.techfly.demo.interfaces.GetResultCallBack;
import com.techfly.demo.network.AppClient;
import com.techfly.demo.util.AppManager;
import com.techfly.demo.util.DialogUtil;
import com.techfly.demo.util.NetWorkUtil;
import com.techfly.demo.util.PreferenceUtil;
import com.techfly.demo.util.StatusBarUtil;
import com.techfly.demo.util.SystemBarTintManager;
import com.techfly.demo.util.ToastUtil;

import me.imid.swipebacklayout.lib.app.SwipeBackActivity;


/**
 * BaseActivity-FragmentActivity
 */
public class BaseFragmentActivity extends SwipeBackActivity implements GetResultCallBack {

    public ImageView back_iv;
    public TextView title_tv;
    public ImageView right_iv;
    public TextView right_tv;

    public LayoutInflater layoutInflater;
    public View view;

    protected String[] mMonths = new String[]{
            "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"
    };

    protected String[] mParties = new String[]{
            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",
            "Party I", "Party J", "Party K", "Party L", "Party M", "Party N", "Party O", "Party P",
            "Party Q", "Party R", "Party S", "Party T", "Party U", "Party V", "Party W", "Party X",
            "Party Y", "Party Z"
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        AppManager.getAppManager().addActivity(this);

        initBaseView();
    }

    public void initBaseView() {
        back_iv = (ImageView) findViewById(R.id.top_back_iv);
        title_tv = (TextView) findViewById(R.id.top_title_tv);
        right_tv = (TextView) findViewById(R.id.top_right_tv);
        right_iv = (ImageView) findViewById(R.id.top_right_iv);

    }

    /*public boolean checkLogin(Context context) {
        if (!Constant.IS_LOGIN) {
            DialogUtil.showLoginDialog(context);
            return false;
        }
        return true;
    }*/
    public boolean checkLogin(Context context) {
        if (!PreferenceUtil.getBooleanSharePreference(context, Constant.CONFIG_IS_LOGIN, false)) {
            DialogUtil.showLoginDialog(context);
            return false;
        } else {
            return true;
        }
    }

    /*
     * 结束事件
     */
    protected void initBackButton(int resid) {
        ImageView btnBack = (ImageView) findViewById(resid);
        btnBack.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    /*
     * 设置标题
     */
    public void setBaseTitle(String mTitle, int rTitle) {
        title_tv.setText(mTitle);
        if (rTitle == 0) {
            right_tv.setVisibility(View.GONE);
            right_iv.setVisibility(View.INVISIBLE);
        } else {
            right_tv.setText(rTitle);
            right_tv.setVisibility(View.VISIBLE);
            right_iv.setVisibility(View.VISIBLE);
        }
    }

    /*
     * 设置状态栏背景状态
	 */
    public void setTranslucentStatus(int color) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            Window win = getWindow();
            WindowManager.LayoutParams winParams = win.getAttributes();
            final int bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;
            winParams.flags |= bits;
            win.setAttributes(winParams);
        }

        SystemBarTintManager tintManager = new SystemBarTintManager(this);
        tintManager.setStatusBarTintEnabled(true);
        tintManager.setStatusBarTintResource(color);//状态栏无背景

        int getSystemType = StatusBarUtil.StatusBarLightMode(BaseFragmentActivity.this);
        StatusBarUtil.StatusBarLightMode(BaseFragmentActivity.this, getSystemType);
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        overridePendingTransition(R.anim.move_left_in_activity, R.anim.move_right_out_activity);
    }

    @Override
    protected void onDestroy() {
        // TODO Auto-generated method stub
        AppManager.getAppManager().finishActivity(this);
        super.onDestroy();
    }

    @Override
    public void getResult(String result, int type) {
        if (type == Constant.API_REQUEST_FAILURE) {
            ToastUtil.DisplayToast(this, Constant.TOAST_MEG_NETWORK_ERROR);
        }
        if (type == Constant.API_ERROR_REBACK) {
            Gson gson = new Gson();
            ErrorBean data = gson.fromJson(result, ErrorBean.class);
            if (data != null) {
                ToastUtil.DisplayToast(this, data.getData() + "", Toast.LENGTH_LONG);
            }
        }
    }

    private void isNetConnect() {
        if (NetWorkUtil.isNetWorkConnected(BaseFragmentActivity.this)) {
        } else if (BaseFragmentActivity.this != null) {
            ToastUtil.DisplayToast(BaseFragmentActivity.this, Constant.TOAST_MEG_NETWORK_NULL);
        }
    }

    public void getWashClothesTitleApi(String type) {
        isNetConnect();
        AppClient.getWashClothesTitle(type, this);
    }

    //用户信息
    public void getUserBaseInfoApi(String uid,String token) {
        isNetConnect();
        AppClient.getUserBaseInfo(uid, token, this);
    }

    public void getShopGoodsKindsNumApi(String uid, String token,String shopId) {
        isNetConnect();
        AppClient.getShopGoodsKindsNum(uid, token, shopId,this);
    }
}
